import './UploadedFileComponent.css.proxy.js';
/* src/app_pages/upload_page/UploadedFileComponent.svelte generated by Svelte v3.31.1 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	set_data,
	space,
	text
} from "../../../web_modules/svelte/internal.js";

import { createEventDispatcher } from "../../../web_modules/svelte.js";

function create_fragment(ctx) {
	let div2;
	let div0;
	let h3;
	let t0_value = /*videoFile*/ ctx[0].fileName + "";
	let t0;
	let t1;
	let div1;
	let mounted;
	let dispose;

	return {
		c() {
			div2 = element("div");
			div0 = element("div");
			h3 = element("h3");
			t0 = text(t0_value);
			t1 = space();
			div1 = element("div");
			div1.textContent = "remove";
			attr(div0, "class", "file-name-container svelte-1j56woq");
			attr(div1, "class", "remove-button svelte-1j56woq");
			attr(div2, "class", "container svelte-1j56woq");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div0);
			append(div0, h3);
			append(h3, t0);
			append(div2, t1);
			append(div2, div1);

			if (!mounted) {
				dispose = listen(div1, "click", /*handleRemoveButton*/ ctx[1]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*videoFile*/ 1 && t0_value !== (t0_value = /*videoFile*/ ctx[0].fileName + "")) set_data(t0, t0_value);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div2);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	
	let { videoFile } = $$props;
	const dispatch = createEventDispatcher();

	const handleRemoveButton = () => {
		dispatch("remove", { id: videoFile.id });
	};

	$$self.$$set = $$props => {
		if ("videoFile" in $$props) $$invalidate(0, videoFile = $$props.videoFile);
	};

	return [videoFile, handleRemoveButton];
}

class UploadedFileComponent extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { videoFile: 0 });
	}
}

export default UploadedFileComponent;